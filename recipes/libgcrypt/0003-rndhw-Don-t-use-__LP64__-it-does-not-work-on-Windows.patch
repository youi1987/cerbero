From afa3cdb50ab0f8cb8fbc0e7412feca2cd20defb3 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Sebastian=20Dr=C3=B6ge?= <sebastian@centricular.com>
Date: Tue, 4 Feb 2014 22:05:39 +0100
Subject: [PATCH] rndhw: Don't use __LP64__, it does not work on Windows for
 some reason

Fixes compilation on 64 bit Windows

WARNING: This will break x32 compilation... but who does that anyway?!
---
 random/rndhw.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/random/rndhw.c b/random/rndhw.c
index e625512..1adc768 100644
--- a/random/rndhw.c
+++ b/random/rndhw.c
@@ -69,7 +69,7 @@ poll_padlock (void (*add)(const void*, size_t, enum random_origins),
   nbytes = 0;
   while (nbytes < 64)
     {
-#if defined(__x86_64__) && defined(__LP64__)
+#if defined(__x86_64__)
       asm volatile
         ("movq %1, %%rdi\n\t"         /* Set buffer.  */
          "xorq %%rdx, %%rdx\n\t"      /* Request up to 8 bytes.  */
@@ -123,7 +123,7 @@ poll_padlock (void (*add)(const void*, size_t, enum random_origins),
 #ifdef USE_DRNG
 # define RDRAND_RETRY_LOOPS	10
 # define RDRAND_INT	".byte 0x0f,0xc7,0xf0"
-# if defined(__x86_64__) && defined(__LP64__)
+# if defined(__x86_64__)
 #  define RDRAND_LONG	".byte 0x48,0x0f,0xc7,0xf0"
 # else
 #  define RDRAND_LONG	RDRAND_INT
-- 
1.9.rc1

